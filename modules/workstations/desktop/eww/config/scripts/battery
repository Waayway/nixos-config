#!/usr/bin/env bash

# Find the first battery directory (BAT0, BAT1, etc)
BATTERY_DIR=$(find /sys/class/power_supply/ -maxdepth 1  -name "BAT*" | head -n1)

if [[ -z "$BATTERY_DIR" ]]; then
    echo 'false'
    exit 1
fi

STATUS_FILE="$BATTERY_DIR/status"
CAPACITY_FILE="$BATTERY_DIR/capacity"

# Prefer energy_* files, fallback to charge_* files
get_file() {
    if [[ -f "$BATTERY_DIR/energy_$1" ]]; then
        echo "$BATTERY_DIR/energy_$1"
    else
        echo "$BATTERY_DIR/charge_$1"
    fi
}

NOW_FILE=$(get_file now)
FULL_FILE=$(get_file full)
POWER_FILE=$(get_file power_now)
# Fallback to current_now if power_now is missing
if [[ ! -f "$POWER_FILE" && -f "$BATTERY_DIR/current_now" ]]; then
    POWER_FILE="$BATTERY_DIR/current_now"
fi

last_status=""
last_capacity=""


while true; do
    # Read status and capacity
    status=$(<"$STATUS_FILE")
    capacity=$(<"$CAPACITY_FILE")

    if [[ "$status" != "$last_status" || "$capacity" != "$last_capacity" ]]; then
        if [[ "$status" == "Discharging" ]]; then
            is_discharging=true
        else
            is_discharging=false
        fi

        info_text=""

        # Calculate time estimate if possible
        if [[ -f "$NOW_FILE" && -f "$POWER_FILE" && -f "$FULL_FILE" ]]; then
            now=$(<"$NOW_FILE")
            full=$(<"$FULL_FILE")
            power=$(<"$POWER_FILE")
            if [[ "$power" -gt 0 ]]; then
                if $is_discharging; then
                    mins=$(awk "BEGIN {printf \"%.0f\", ($now/$power)*60}")
                    if [[ "$mins" -gt 0 ]]; then
                        hours=$((mins / 60))
                        rem_mins=$((mins % 60))
                        if [[ "$hours" -gt 0 ]]; then
                            info_text="About ${hours}h ${rem_mins}m of battery life remaining."
                        else
                            info_text="Around ${rem_mins} minutes of battery left."
                        fi
                    else
                        info_text="Calculating remaining battery time..."
                    fi
                elif [[ "$status" == "Charging" ]]; then
                    to_full=$((full - now))
                    if [[ "$to_full" -gt 0 ]]; then
                        mins=$(awk "BEGIN {printf \"%.0f\", ($to_full/$power)*60}")
                        hours=$((mins / 60))
                        rem_mins=$((mins % 60))
                        if [[ "$hours" -gt 0 ]]; then
                            info_text="Charging: fully charged in approximately ${hours}h ${rem_mins}m."
                        else
                            info_text="Charging: about ${rem_mins} minutes until full."
                        fi
                    else
                        info_text="Battery is almost fully charged."
                    fi
                elif [[ "$status" == "Full" ]]; then
                    info_text="Battery is fully charged."
                else
                    info_text="Battery status: $status."
                fi
            else
                info_text="Power reading unavailable. Cannot estimate time."
            fi
        else
            info_text="Battery details unavailable."
        fi

        printf '{"discharging": %s, "percentage": %s, "info-text": "%s"}\n' "$is_discharging" "$capacity" "$info_text"
        last_status="$status"
        last_capacity="$capacity"
    fi

    sleep 2
done
