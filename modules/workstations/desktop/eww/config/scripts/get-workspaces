#!/usr/bin/env bash

# This script queries all defined workspaces from hyprland.conf, always outputs numbered workspaces 1-10,
# and separates named and numbered workspaces, showing their status as "empty", "occupied", or "active".
# For "named" workspaces, outputs only the plain name (no "name:" prefix).

get_all_named_workspaces() {
  # Find the Hyprland config file. You may need to adapt this search path.
  if [[ -n "$HYPRLAND_CONF" && -f "$HYPRLAND_CONF" ]]; then
    CONF_PATH="$HYPRLAND_CONF"
  elif [[ -f "$HOME/.config/hypr/hyprland.conf" ]]; then
    CONF_PATH="$HOME/.config/hypr/hyprland.conf"
  elif [[ -f "/etc/hypr/hyprland.conf" ]]; then
    CONF_PATH="/etc/hypr/hyprland.conf"
  else
    return
  fi

  # Extract named workspace definitions (exclude pure numbers, strip "name:" prefix)
  grep -P '^\s*workspace\s*=' "$CONF_PATH" \
    | sed -E 's/^\s*workspace\s*=\s*//' \
    | cut -d',' -f1 \
    | sed 's/^[ \t]*//;s/[ \t]*$//' \
    | grep -v -E '^[0-9]+$' \
    | sed -E 's/^name://;s/^[ \t]*//;s/[ \t]*$//' \
    | sort | uniq
}

get_workspace_statuses() {
  hyprctl workspaces -j
}

get_active_workspaces() {
  hyprctl monitors -j
}

output_workspaces() {
  local status_json active_json
  # 1. Get all named workspaces (from config file)
  mapfile -t named_workspaces < <(get_all_named_workspaces)

  # 2. Get current workspace status (from hyprctl)
  status_json="$(get_workspace_statuses)"
  # 3. Get active workspaces per monitor (from hyprctl monitors -j)
  active_json="$(get_active_workspaces)"

  # 4. Build a map of workspace id -> windows count and name
  declare -A ws_windows ws_names
  while read -r id name windows; do
    # Strip "name:" prefix from any name in hyprctl output too
    clean_name="${name#name:}"
    ws_windows["$id"]="$windows"
    ws_names["$id"]="$clean_name"
  done < <(echo "$status_json" | jq -r '.[] | "\(.id) \(.name) \(.windows)"')

  # 5. Collect all active workspace ids and names from all monitors
  declare -A active_ids active_names
  while read -r wsid wsname; do
    clean_name="${wsname#name:}"
    [[ -n "$wsid" ]] && active_ids["$wsid"]=1
    [[ -n "$clean_name" && ! "$wsid" =~ ^[0-9]+$ ]] && active_names["$clean_name"]=1
  done < <(echo "$active_json" | jq -r '.[] | .activeWorkspace | "\(.id) \(.name)"')

  # 6. Numbered workspaces: always 1-10, even if not in config or not present.
  number_dict=()
  for num in {1..10}; do
    status="empty"
    win_count="${ws_windows[$num]:-0}"
    [[ ${active_ids[$num]+_} ]] && status="active" || { [[ "$win_count" -gt 0 ]] && status="occupied"; }
    number_dict+=("{\"id\":\"$num\",\"status\":\"$status\",\"windows\":$win_count}")
  done

  # 7. Named workspaces: from config, or currently present (if not defined in config but exists)
  declare -A named_seen
  name_dict=()
  for name in "${named_workspaces[@]}"; do
    [[ -n "$name" ]] && named_seen["$name"]=1
  done
  # Add currently present named workspaces not in config
  for wsid in "${!ws_names[@]}"; do
    if [[ ! "${wsid}" =~ ^[0-9]+$ ]]; then
      named_seen["${ws_names[$wsid]}"]=1
    fi
  done
  # Add any active named workspace from monitors (if not in config or current workspaces)
  for name in "${!active_names[@]}"; do
    named_seen["$name"]=1
  done

  for name in "${!named_seen[@]}"; do
    # Find if this named workspace is present by matching with .name
    name_ws_json=$(echo "$status_json" | jq --arg name "$name" '.[] | select(.name == $name or .name == ("name:" + $name))')
    status="empty"
    win_count=0
    if [[ -n "$name_ws_json" ]]; then
      win_count=$(echo "$name_ws_json" | jq '.windows')
      # Check if this named workspace is active on any monitor
      if echo "$active_json" | jq -e --arg name "$name" '.[] | .activeWorkspace.name == $name or .activeWorkspace.name == ("name:" + $name)' >/dev/null; then
        status="active"
      elif [[ "$win_count" -gt 0 ]]; then
        status="occupied"
      fi
    else
      # Even if not present in hyprctl workspaces, check if it's active by monitors
      if echo "$active_json" | jq -e --arg name "$name" '.[] | .activeWorkspace.name == $name or .activeWorkspace.name == ("name:" + $name)' >/dev/null; then
        status="active"
      fi
    fi
    name_dict+=("{\"name\":\"$name\",\"status\":\"$status\",\"windows\":$win_count}")
  done

  printf '{ "numbered": [%s], "named": [%s] }\n' \
    "$(IFS=,; echo "${number_dict[*]}")" \
    "$(IFS=,; echo "${name_dict[*]}")"
}

output_workspaces

# Listen for workspace/monitor events and re-output
if [[ -n "$XDG_RUNTIME_DIR" && -n "$HYPRLAND_INSTANCE_SIGNATURE" ]]; then
  socat -u UNIX-CONNECT:"$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock" - | \
    while read -r _; do
      output_workspaces
    done
fi
